-- MySQL Script generated by MySQL Workbench
-- Fri Mar  8 13:18:19 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema technovision
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema technovision
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `technovision` DEFAULT CHARACTER SET utf8 ;
USE `technovision` ;

-- -----------------------------------------------------
-- Table `technovision`.`ContactLense`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technovision`.`ContactLense` (
  `Id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `OrderNumber` VARCHAR(8) NOT NULL,
  `OrderDate` DATE NOT NULL,
  `DueDate` DATE NOT NULL,
  `JobType` VARCHAR(45) NOT NULL,
  `TestedBy` VARCHAR(45) NOT NULL,
  `Total` DOUBLE NOT NULL,
  `Discount` DOUBLE NOT NULL,
  `Advance` DOUBLE NOT NULL,
  `Balance` DOUBLE NOT NULL,
  `PaymentMethod` VARCHAR(45) NOT NULL,
  `PaymentPlan` VARCHAR(45) NOT NULL,
  `OrderStatus` VARCHAR(15) NULL,
  `OldRightSph` VARCHAR(10) NOT NULL,
  `OldRightCyl` VARCHAR(10) NOT NULL,
  `OldRightAxis` VARCHAR(10) NOT NULL,
  `OldRightAdd` VARCHAR(10) NOT NULL,
  `OldLeftSph` VARCHAR(10) NOT NULL,
  `OldLeftCyl` VARCHAR(10) NOT NULL,
  `OldLeftAxis` VARCHAR(10) NOT NULL,
  `OldLeftAdd` VARCHAR(10) NOT NULL,
  `PresentRightSph` VARCHAR(10) NOT NULL,
  `PresentRightCyl` VARCHAR(10) NOT NULL,
  `PresentRightAxis` VARCHAR(10) NOT NULL,
  `PresentRightAdd` VARCHAR(10) NOT NULL,
  `PresentLeftSph` VARCHAR(10) NOT NULL,
  `PresentLeftCyl` VARCHAR(10) NOT NULL,
  `PresentLeftAxis` VARCHAR(10) NOT NULL,
  `PresentLeftAdd` VARCHAR(10) NOT NULL,
  `RightBc` VARCHAR(10) NOT NULL,
  `RightPow` VARCHAR(10) NOT NULL,
  `RightDia` VARCHAR(10) NOT NULL,
  `RightDesz` VARCHAR(10) NOT NULL,
  `LeftBc` VARCHAR(10) NOT NULL,
  `LeftPow` VARCHAR(10) NOT NULL,
  `LeftDia` VARCHAR(10) NOT NULL,
  `LeftDesz` VARCHAR(10) NOT NULL,
  `TrailLense` VARCHAR(150) NOT NULL,
  `OverRefract` VARCHAR(45) NOT NULL,
  `KReading` VARCHAR(45) NOT NULL,
  `BlinkTest` VARCHAR(45) NOT NULL,
  `SpecialInstractions` VARCHAR(225) NOT NULL,
  `Remarks` VARCHAR(150) NOT NULL,
  `ReminderDays` INT NOT NULL,
  `Branch` INT NOT NULL,
  `Year` VARCHAR(45) NOT NULL,
  `CustomerId` INT NOT NULL,
  PRIMARY KEY (`Id`),
  UNIQUE INDEX `Id_UNIQUE` (`Id` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `technovision`.`Spectacles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technovision`.`Spectacles` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `OrderNumber` VARCHAR(8) NOT NULL,
  `OrderDate` DATE NOT NULL,
  `DueDate` DATE NOT NULL,
  `OrderStatus` VARCHAR(45) NOT NULL,
  `Total` DOUBLE NOT NULL,
  `Advance` DOUBLE NOT NULL,
  `Discount` DOUBLE NOT NULL,
  `Balance` DOUBLE NOT NULL,
  `TestBy` VARCHAR(100) NOT NULL,
  `EyeWear` DOUBLE NOT NULL,
  `Lense` DOUBLE NOT NULL,
  `PaymentPlan` VARCHAR(45) NOT NULL,
  `PaymentMethod` VARCHAR(45) NOT NULL,
  `DistRightSph` VARCHAR(10) NOT NULL,
  `DistRightCyl` VARCHAR(10) NOT NULL,
  `DistRightAxis` VARCHAR(10) NOT NULL,
  `DistLeftSph` VARCHAR(10) NOT NULL,
  `DistLeftCyl` VARCHAR(10) NOT NULL,
  `DistLeftAxis` VARCHAR(10) NOT NULL,
  `AddRight` VARCHAR(10) NOT NULL,
  `AddLeft` VARCHAR(10) NOT NULL,
  `LenseType` VARCHAR(45) NOT NULL,
  `Frame` VARCHAR(45) NOT NULL,
  `PD` VARCHAR(45) NOT NULL,
  `SegmentHight` VARCHAR(10) NOT NULL,
  `SpecialInstractions` VARCHAR(225) NOT NULL,
  `Remarks` VARCHAR(45) NOT NULL,
  `ReminderDate` INT NOT NULL,
  `Branch` INT NOT NULL,
  `Year` VARCHAR(45) NOT NULL,
  `CustomerId` INT NOT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `technovision`.`Customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technovision`.`Customer` (
  `Id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(225) NOT NULL,
  `Address` VARCHAR(225) NOT NULL,
  `Profession` VARCHAR(225) NOT NULL,
  `Age` VARCHAR(225) NOT NULL,
  `Phone` VARCHAR(10) NOT NULL,
  `Email` VARCHAR(50) NOT NULL,
  `Branch` INT NOT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `technovision`.`Receipt`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technovision`.`Receipt` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `ReceiptNumber` VARCHAR(45) NOT NULL,
  `ReceiptDate` DATE NOT NULL,
  `OrderNumber` VARCHAR(10) NOT NULL,
  `PaymentAmount` DOUBLE NOT NULL,
  `Branch` INT NOT NULL,
  `OrderType` VARCHAR(45) NOT NULL,
  `Year` VARCHAR(45) NOT NULL,
  `CustId` INT NOT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB
COMMENT = '								';


-- -----------------------------------------------------
-- Table `technovision`.`Frames`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technovision`.`Frames` (
  `Id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `FrameName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `technovision`.`Testers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technovision`.`Testers` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `technovision`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technovision`.`Users` (
  `Username` VARCHAR(100) NOT NULL,
  `Password` VARCHAR(45) NOT NULL,
  `FullName` VARCHAR(150) NOT NULL,
  `Nic` VARCHAR(45) NOT NULL,
  `ContactNumber` VARCHAR(12) NOT NULL,
  `BranchId` INT NOT NULL,
  `IsActive` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Username`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `technovision`.`Branch`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technovision`.`Branch` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `BranchName` VARCHAR(45) NOT NULL,
  `MasterPassword` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `technovision`.`Logs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `technovision`.`Logs` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `User` VARCHAR(45) NOT NULL,
  `BranchId` INT NOT NULL,
  `RecordDate` DATE NOT NULL,
  `RecordTime` DATETIME NOT NULL,
  `RecordContent` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


DELIMITER $$
Create PROCEDURE `GetMaxReceipt`(
 IN xBranch int,
 IN xYear varchar(15), 
 OUT xReceiptNumber varchar(50))
BEGIN
 SELECT ReceiptNumber INTO xReceiptNumber  FROM receipt WHERE Branch =  xBranch AND Year = xYear AND substring(ReceiptNumber,2)=(SELECT MAX(CAST(SUBSTRING(ReceiptNumber,2) AS SIGNED)) FROM receipt);
END$$
DELIMITER ;